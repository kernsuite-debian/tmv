Source: tmv
Priority: optional
Maintainer: Gijs Molenaar (launchpad ppa build key) <gijs@pythonic.nl>
Build-Depends: debhelper (>= 9.0.0), scons, libblas-dev, libatlas-dev
Standards-Version: 3.9.7
Section: libs
Homepage: https://github.com/rmjarvis/tmv
Vcs-Git: https://github.com/kernsuite-debian/tmv
Vcs-Browser: https://github.com/kernsuite-debian/tmv

Package: tmv-dev
Section: libdevel
Architecture: any
Depends: libtmv0 (= ${binary:Version}), libtmv-symband0 (= ${binary:Version}), ${misc:Depends} 
Replaces: tmv0 (<< 0.74-1kern1)
Description: Fast, intuitive C++ linear algebra library (header files)
 The Template Matrix/Vector (TMV) Library is a C++ class library designed to
 make writing code with vectors and matrices both transparent and fast.
 Transparency means that when you look at your code months later, it is obvious
 what the code does, making it easier to debug. Fast means the execution tim
 of the code should be as fast as possible - this is mostly aslgorithm
 dependent, so we want the underlying library code to use the fastest
 algorithms possible.

Package: libtmv0
Section: libs
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Replaces: tmv0 (<< 0.74-1kern1)
Description: Fast, intuitive C++ linear algebra library
 The Template Matrix/Vector (TMV) Library is a C++ class library designed to
 make writing code with vectors and matrices both transparent and fast.
 Transparency means that when you look at your code months later, it is obvious
 what the code does, making it easier to debug. Fast means the execution tim
 of the code should be as fast as possible - this is mostly aslgorithm
 dependent, so we want the underlying library code to use the fastest
 algorithms possible.

Package: libtmv-symband0
Section: libs
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Replaces: tmv0 (<< 0.74-1kern1)
Description: Fast, intuitive C++ linear algebra library  (band, sym matrices)
 The Template Matrix/Vector (TMV) Library is a C++ class library designed to
 make writing code with vectors and matrices both transparent and fast.
 Transparency means that when you look at your code months later, it is obvious
 what the code does, making it easier to debug. Fast means the execution tim
 of the code should be as fast as possible - this is mostly aslgorithm
 dependent, so we want the underlying library code to use the fastest
 algorithms possible.
 .
 This package contains the libraries for Band, Sym and SymBand matrices.

